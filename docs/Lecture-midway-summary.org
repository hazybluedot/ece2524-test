#+TITLE: Midway Summary
#+AUTHOR: Darren Maczka
#+LaTeX_HEADER: \usepackage{xcolor}
#+LaTeX_HEADER: \usepackage{mathptmx}
#+LaTeX_HEADER: \usepackage{tikz}
#+LaTeX_HEADER: \usetikzlibrary{arrows}
#+LaTeX_HEADER: \usepackage{verbatim}
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation]
#+BEAMER_FRAME_LEVEL: 2
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+BEAMER_HEADER_EXTRA: \usetheme{CambridgeUS}
#+COLUMNS: %45ITEM %10BEAMER_env(Env) %10BEAMER_envargs(Env Args) %4BEAMER_col(Col) %8BEAMER_extra(Extra)
#+PROPERTY: BEAMER_col_ALL 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 :ETC

* Looking ahead
** Schedule
*** this week: High-level concepts, more with python/regex, task assignment due
*** 3/25, 3/27: Review, Midterm
*** 4/1, 4/3: Automating build tasks with Makefiles 

* Concepts
** Some Words on Some Words
- orthogonal :: 
  1. Relating to or involving right angles; at right angles (to something else).
  2. /Math/. Of a linear transformation of a vector space: preserving lengths and angles; leaving unchanged the inner product of any two vectors.
  3. /Statistics/. Of a set of variates: statistically independent. Of an experimental design: such that the variates under investigation can be treated as statistically independent. 
  4. /Programming/. ...

** Some Words on Some Words
- idiom ::
  1. /language/  A form of expression, grammatical construction, phrase, etc., used in a distinctive way in a particular language, dialect, or language variety; spec. a group of words established by usage as having a meaning not deducible from the meanings of the individual words.
  2. /programming/ ...

** Some Words on Some Words 
- art :: 
  1. Skill; its display, application, or expression.
  2. /Programming/ ...

** Examples
*** different languages have different
- vocabulary
- grammar/syntax
- idioms

*** direct translation doesn't always provide best results
- /piece of cake/
- /hit the nail on the head/
- /hit the books/

#+BEGIN_EXAMPLE
$ examples/bepythonic.py
$ examples/python-switch.py
#+END_EXAMPLE

*** learning a new language (vocabulary, syntax) is easy, but fluency takes time and practice

** Working with Lists
*** Iterating over structured data
#+BEGIN_EXAMPLE
$ examples/read_records.py
#+END_EXAMPLE

#+BEGIN_EXAMPLE
$ examples/read_records_gen.py
#+END_EXAMPLE
- google 'python generator function'

*** List comprehension
$S_N = \{ x^2 | x \in \mathbb{N}, x < N \}$
#+begin_src python
squares_N=[ x**2 for x in range(1,N+1) ]
#+end_src

#+BEGIN_EXAMPLE
$ examples/list_comprehension.py
#+END_EXAMPLE

* Logic vs. Data
** arguments vs. structured data
#+BEGIN_EXAMPLE
$ ./task.py add "finish homework" --priority A \
 --project ece2524 --due '2013-03-25'"
#+END_EXAMPLE

#+BEGIN_EXAMPLE
$ ./task.py add "(A) finish homework +ece2524 \
 due:2013-03-25"
#+END_EXAMPLE

** arguments vs. structured data
#+BEGIN_EXAMPLE
$ ./task.py list --project ece2524
#+END_EXAMPLE

#+BEGIN_EXAMPLE
$ ./task.py list '+ece2524'
#+END_EXAMPLE

** Rule of Representation
#+BEGIN_QUOTE
Fold knowledge into data, so program logic can be stupid and robust. -[[http://www.catb.org/esr/writings/taoup/html/ch01s06.html#id2878263][Raymond, \S 1.6]]
#+END_QUOTE

*** Trade offs?

